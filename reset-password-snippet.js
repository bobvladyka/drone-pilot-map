
// Reset hesla
app.post('/reset-password', async (req, res) => {
  const { email } = req.body;
  if (!email) return res.status(400).send("E-mail je povinn√Ω.");

  db.get(`SELECT * FROM pilots WHERE email = ?`, [email], async (err, user) => {
    if (err || !user) {
      return res.status(404).send("U≈æivatel s t√≠mto e-mailem nebyl nalezen.");
    }

    // Generuj nov√© heslo
    const newPassword = Math.random().toString(36).slice(-8);
    const hash = await bcrypt.hash(newPassword, 10);

    // Ulo≈æ nov√© heslo
    db.run(`UPDATE pilots SET password_hash = ? WHERE email = ?`, [hash, email], (err) => {
      if (err) {
        console.error("Chyba p≈ôi ukl√°d√°n√≠ nov√©ho hesla:", err);
        return res.status(500).send("Chyba p≈ôi ukl√°d√°n√≠ nov√©ho hesla.");
      }

      // Simuluj odesl√°n√≠ e-mailu (m√≠sto toho zobraz√≠me v√Ωstup na serveru)
      console.log(`üîê Nov√© heslo pro ${email}: ${newPassword}`);
      res.send("Nov√© heslo bylo vygenerov√°no a zasl√°no na v√°≈° e-mail.");
    });
  });
});
